# # Use an official Go image
# FROM golang:1.21-alpine

# # Install dependencies (including CGO requirements)
# RUN apk add --no-cache gcc musl-dev

# # Set the working directory inside the container
# WORKDIR /app

# # Copy all files into the container
# COPY . .

# # Build the application with CGO enabled
# # RUN CGO_ENABLED=1 go build -o main .
# RUN CGO_ENABLED=1 go build -v -x -o main .


# # Expose the app's port (adjust if necessary)
# EXPOSE 8080

# # Command to run the application
# CMD ["./main"]




# Use an official Go image
# FROM golang:1.21-alpine
FROM golang:1.24-alpine

# Install dependencies for CGO and Go build tools
RUN apk add --no-cache \
    gcc \
    musl-dev \
    libc6-compat \
    make \
    bash \
    linux-headers \
    git

# Set the working directory inside the container
WORKDIR /app

# Copy go mod files first (for caching)
COPY go.mod ./
COPY go.sum ./
# RUN go mod download
# RUN go mod download -x
RUN go env && go mod download -x



# Copy the rest of the source code
COPY . .

# Build the application with CGO enabled and show verbose output
RUN CGO_ENABLED=1 go build -v -x -o main .

# Expose the app's port (adjust if necessary)
EXPOSE 8080

# Command to run the application
CMD ["./main"]
